package ra.run;

import ra.bussiness.Book;

import java.util.Scanner;

public class BookManagement {
    Book[] arrBook = new Book[100] ;
    int currenIndex = 0 ;
//    Book book1 = new Book(1,"Truy·ªán Ki·ªÅu","Nguy·ªÖn DU", "S·ªë ph·∫≠n ng∆∞·ªùi con g√°i x√£ h·ªôi phong ki·∫øn", 50000, 100000,true )
//    Book book2 = new Book(3,"Ch√≠ ph√®o","VƒÉn Cao", "S·ªë ph·∫≠n ng∆∞·ªùi n√¥ng ƒë√¢n x√£ h·ªôi phong ki·∫øn", 60000, 120000,true );

    public static void main(String[] args) {
        Scanner sc= new Scanner(System.in) ;
        BookManagement bookManagement = new BookManagement();
        int choice ;
        do {
            System.out.println("____________ JAVA-HACKATHON-05-BASIC-MENU _____________");
            System.out.println("1. Nh·∫≠p s·ªë l∆∞·ª£ng s√°ch th√™m m·ªõi v√† nh·∫≠p th√¥ng tin cho t·ª´ng cu·ªën s√°ch");
            System.out.println("2. Hi·ªÉn th·ªã th√¥ng tin t·∫•t c·∫£ s√°ch trong th∆∞ vi·ªán");
            System.out.println("3. S·∫Øp x·∫øp s√°ch theo l·ª£i nhu·∫≠n tƒÉng d·∫ßn");
            System.out.println("4. X√≥a s√°ch theo m√£ s√°ch");
            System.out.println("5. T√¨m ki·∫øm t∆∞∆°ng ƒë·ªëi s√°ch theo t√™n s√°ch ho·∫∑c m√¥ t·∫£");
            System.out.println("6. Thay ƒë·ªïi th√¥ng tin s√°ch theo m√£ s√°ch");
            System.out.println("7. ‚ùå Tho√°t");
            System.out.println("L·ª±a ch·ªçn t·ª´ 1-7 ƒë·ªÉ th·ª±c hi·ªán ch·ª©c nƒÉng");
            choice = Integer.parseInt(sc.nextLine());
            switch (choice) {
                case 1 :
                    // th√™m s√°ch
                    bookManagement.createBook(sc);
                    break;
                case 2 :
                    // hi·ªÉn th·ªã th√¥ng tin s√°ch trong th∆∞ vi·ªán
                    bookManagement.printBook();
                    break;
                case 3 :
                    // s·∫Øp x·∫øp theo gi√° tƒÉng d·∫ßn
                    bookManagement.sortByPrice();
                    break;
                case 4 :
                    // xo√° s√°ch kh·ªèi danh m·ª•c
                    bookManagement.deleteBook(sc);
                    break;
                case 5 :
                    // t√¨m ki·∫øm s√°ch theo t√™n ho·∫∑c m√¥ t·∫£
                    bookManagement.searchByNameOrDescriptions(sc);
                    break;
                case 6 :
                    // thay ƒë·ªïi th√¥ng tin s√°ch theo id
                    bookManagement.updateBookById(sc);
                    break;
                case 7 :
                    System.out.println("‚ù§ü§ûüèª Tho√°t kh·ªèi ch∆∞∆°ng tr√¨nh");
                    sc.close();
                    break;
                default:
                    System.err.println("L·ª±a ch·ªçn ch·ª©c nƒÉng kh√¥ng ph√π h·ª£p , vui l√≤ng nh√¢p l·∫°i ");
            }
        } while (choice != 7) ;
    }
     public void createBook(Scanner sc) {
         System.out.println("Nh·∫≠p v√†o s·ªë l∆∞·ª£ng s√°ch mu√¥n th√™m");
         int add = Integer.parseInt(sc.nextLine()) ;
         for (int i = 0; i < add; i++) {
             arrBook[currenIndex] = new Book() ;
             arrBook[currenIndex].inputData(sc);
             currenIndex++ ;
         }
         System.out.println("ƒê√£ th√™m s√°ch v√†o danh m·ª•c");
     }


     public void printBook() {
         for (int i = 0; i < currenIndex; i++) {
             arrBook[i].displayData();
         }
     }

     public void sortByPrice() {
         for (int i = 0; i < currenIndex - 1; i++) {
             for (int j = i + 1; j < currenIndex; j++) {
                 if (arrBook[i].getInterest() > arrBook[j].getInterest()) {
                     Book temp = arrBook[i];
                     arrBook[i] = arrBook[j];
                     arrBook[j] = temp;
                 }
             }
         }
         System.out.println("Sap xep cac san pham theo loi nhuan giam dan ");
         for (int i = 0; i < currenIndex; i++) {
             arrBook[i].calProfit();
             System.out.println(arrBook[i].getBookName() + " " +  arrBook[i].getInterest() + "VND/sp");
         }
     }

    public int searchById(int idBook) {

        for (int i = 0; i < currenIndex; i++) {
            if (arrBook[i].getBookId() == idBook){
                return i;
            }
        }
        return -1 ;
    }

    public void deleteBook(Scanner sc) {
        System.out.println("Nh·∫≠p v√†o m√£ s√°ch c·∫ßn xo√°");
        int idDelete = Integer.parseInt(sc.nextLine()) ;
        int foundIndex = searchById(idDelete) ;
        if (foundIndex >= 0 ) {
            for (int i = foundIndex; i < currenIndex-1; i++) {
                arrBook[i] = arrBook[i+1];
            }
            arrBook[currenIndex-1] = null;
            currenIndex--;
        } else {
            System.err.println("Kh√¥ng t√¨m th·∫•y s√°ch trong danh m·ª•c");
        }

    }

    public void searchByNameOrDescriptions(Scanner sc) {
        System.out.println("Nh·∫≠p t√™n s√°ch ho·∫∑c m√¥ t·∫£ c·∫ßn t√¨m ki·∫øm");
        String search = sc.nextLine() ;
        for (int i = 0; i < currenIndex; i++) {
            if (arrBook[i].getBookName().equalsIgnoreCase(search) || arrBook[i].getDescriptions().equalsIgnoreCase(search)) {
                System.out.println("S√°ch t√¨m th·∫•y theo t√™n ho·∫∑c m√¥ t·∫£ trong trong danh l·ª•c l√† " + arrBook[i].getBookName());
                break;
            } else {
                System.err.println("Kh√¥ng t√¨m th·∫•y s√°ch theo t√™n ho·∫∑c m√¥ t·∫£");
            }
        }
    }

    public void updateBookById(Scanner sc) {
        System.out.println("Nh·∫≠p v√†o m√£ s√°ch c·∫ßn thay ƒë·ªïi th√¥ng tin");
        int idUpdate = Integer.parseInt(sc.nextLine());
        int foundIndex = searchById(idUpdate);

        if (foundIndex >= 0) {
            //Nh·∫≠p th√¥ng tin c·∫≠p nh·∫≠t
            System.out.println("Nh·∫≠p v√†o t√™n s√°ch c·∫ßn c·∫≠p nh·∫≠t:");
            String nameBook = sc.nextLine();
            if (!nameBook.trim().isEmpty()) {
                arrBook[foundIndex].setBookName(nameBook);
            }

            System.out.println("Nh·∫≠p v√†o t√™n t√°c gi·∫£ c·∫ßn c·∫≠p nh·∫≠t:");
            String tacgia = sc.nextLine();
            if (!tacgia.trim().isEmpty()) {
                arrBook[foundIndex].setAuthor(tacgia);
            }

            System.out.println("Nh·∫≠p v√†o m√¥ t·∫£ s√°ch c·∫ßn c·∫≠p nh·∫≠t:");
            String mota = sc.nextLine();
            if (!mota.trim().isEmpty()) {
                while (mota.length() <= 10) {
                    System.err.println("M√¥ t·∫£ s·∫£n ph·∫©m √≠t nh·∫•t 10 k√Ω t·ª±, vui l√≤ng nh·∫≠p l·∫°i:");
                    mota = sc.nextLine();
                }
                arrBook[foundIndex].setDescriptions(mota);
            }

            System.out.println("Gi√° nh·∫≠p v√†o c·∫ßn c·∫≠p nh·∫≠t:");
            String priceImport = sc.nextLine();
            if (!priceImport.trim().isEmpty()) {
                double importPrice = Double.parseDouble(priceImport);
                while (importPrice <= 0) {
                    System.err.println("Gi√° nh·∫≠p v√†o ch∆∞a h·ª£p l·ªá, vui l√≤ng nh·∫≠p l·∫°i:");
                    priceImport = sc.nextLine();
                    importPrice = Double.parseDouble(priceImport);
                }
                arrBook[foundIndex].setImportPrice(importPrice);
            }

            System.out.println("Gi√° b√°n ra c·∫ßn c·∫≠p nh·∫≠t:");
            String priceExport = sc.nextLine();
            if (!priceExport.trim().isEmpty()) {
                double exportPrice = Double.parseDouble(priceExport);
                while (exportPrice < arrBook[foundIndex].getImportPrice() * 1.2) {
                    System.err.println("Gi√° b√°n ra ph·∫£i √≠t nh·∫•t 1.2 l·∫ßn gi√° nh·∫≠p, vui l√≤ng nh·∫≠p l·∫°i:");
                    priceExport = sc.nextLine();
                    exportPrice = Double.parseDouble(priceExport);
                }
                arrBook[foundIndex].setExportPrice(exportPrice);
            }
        } else {
            System.err.println("Kh√¥ng t√¨m th·∫•y s√°ch trong danh m·ª•c");
        }
    }

}
